Funcs and where
keys: [#] = manageable standalone func; F# = larger func by user act;

Create checkout func (only POST /checkout, in GET /checkout):
- Gets current cart + user + products [1]
- Creates a draftorder CDAF [2]
- returns draftorder id

Render checkout func (only GET /checkout/:id, in GET /checkout): 
- Gets draftorder (or creates one)
- Renders it on page


Delayed get funcs: 
- If saved stripe ID, fetch all payment methods [3]
- Get addresses, use 1st [4] -> obtain all ship rates + choose [F1]


Non-submit changes on page:
F1 - Modify shipping address
F2 - Choose ship rate
F3 - Choose existing payment method


F1 -- Modify address/contact:
- [If NEW, parse; If provided ID, retrieve]
- Checks that it's real, validates country codes
- If in CA, gets and updates tax -> total
- Checks if partial string of address in ShipRate map and within last hour
  - If so, updates current to that and updates actual rate to first one
  - Else, fetches it -> saves in map incl timestamp, updates current and actual
- Check user's status and order total to see if qualified for "free" shipping
  - If so, modify pricing for cheapest to be $0, all others min $0.99 else rate minus cheapest
- If a change in shipping amount, update shipping -> total
- If any change in total, recalibrate payment intent
- Send out update to payment display section

F2 -- Choose ship rate:
 - Grabs ship rate corresponding from Current
 - Modifies actual
 - If a change in shipping amount, update shipping -> total
 - If any change in total, recalibrate payment intent
 - Send out update to payment display section

F3 -- Choose an existing payment method
 - Just update the method id on draft order... that's kinda it


 type DraftOrder struct {
	ID                      primitive.ObjectID        `bson:"_id,omitempty" json:"id"`
	PrintfulID              string                    `bson:"printful_id" json:"printful_id"`
	CustomerID              int                       `bson:"customer_id" json:"customer_id"`
	Status                  string                    `bson:"status" json:"status"`
	Email                   string                    `bson:"email" json:"email"`
	FirstName               string                    `bson:"fname" json:"fname"`
	LastName                string                    `bson:"lname" json:"lname"`
	DateCreated             time.Time                 `bson:"date_created" json:"date_created"`
	DateAbandoned           *time.Time                `bson:"date_abandoned,omitempty" json:"date_abandoned,omitempty"`
	StripePaymentIntentID   string                    `bson:"stripe_payment_intent_id" json:"stripe_payment_intent_id"`
	StripeMethodID          string                    `bson:"stripe_method_id" json:"stripe_method_id"`
	Subtotal                int                       `bson:"subtotal" json:"subtotal"`
	Shipping                int                       `bson:"shipping" json:"shipping"`
	OrderLevelDiscount      int                       `bson:"order_level_discount" json:"order_level_discount"`
	Tax                     int                       `bson:"tax" json:"tax"`
	Tip                     int                       `bson:"tip" json:"tip"`
	Total                   int                       `bson:"total" json:"total"`
	NonStackingDiscountCode string                    `bson:"non_stacking_discount_code" json:"non_stacking_discount_code"`
	StackingDiscountCodes   []string                  `bson:"stacking_discount_codes" json:"stacking_discount_codes"`
	BillingZip              string                    `bson:"billing_contact" json:"billing_contact"`
	ShippingContact         OrderContact              `bson:"shipping_contact" json:"shipping_contact"`
	Lines                   []OrderLine               `bson:"lines" json:"lines"`
	Tags                    []string                  `bson:"tags" json:"tags"`
	DeliveryNote            string                    `bson:"delivery_note" json:"delivery_note"`
	Guest                   bool                      `bson:"guest" json:"guest"`
	GuestID                 *string                   `bson:"guest_id,omitempty" json:"guest_id,omitempty"`
	ActualRate              ShippingRate              `bson:"ship_actual" json:"ship_actual"`
	CurrentShipping         []ShippingRate            `bson:"ship_current" json:"ship_current"`
	AllShippingRates        map[string][]ShippingRate `bson:"ship_all" json:"ship_all"`
}

type OrderLine struct {
	ImageURL          string         `bson:"image_url" json:"image_url"`
	ProductTitle      string         `bson:"product_title" json:"product_title"`
	Handle            string         `bson:"handle" json:"handle"`
	PrintfulID        map[string]int `bson:"pid" json:"pid"`
	Variant1Key       string         `bson:"variant_1_key" json:"variant_1_key"`
	Variant1Value     string         `bson:"variant_1_value" json:"variant_1_value"`
	Variant2Key       string         `bson:"variant_2_key" json:"variant_2_key"`
	Variant2Value     string         `bson:"variant_2_value" json:"variant_2_value"`
	Variant3Key       string         `bson:"variant_3_key" json:"variant_3_key"`
	Variant3Value     string         `bson:"variant_3_value" json:"variant_3_value"`
	ProductID         string         `bson:"product_id" json:"product_id"`
	VariantID         string         `bson:"variant_id" json:"variant_id"`
	Quantity          int            `bson:"quantity" json:"quantity"`
	UndiscountedPrice int            `bson:"undiscounted_price" json:"undiscounted_price"`
	LineLevelDiscount int            `bson:"line_level_discount" json:"line_level_discount"`
	EndPrice          int            `bson:"end_price" json:"end_price"`
	LineTotal         int            `bson:"line_total" json:"line_total"`
}

type OrderContact struct {
	FirstName      string `bson:"first_name" json:"first_name"`
	LastName       string `bson:"last_name" json:"last_name"`
	PhoneNumber    string `bson:"phone_number" json:"phone_number"`
	StreetAddress1 string `bson:"street_address_1" json:"street_address_1"`
	StreetAddress2 string `bson:"street_address_2" json:"street_address_2"`
	City           string `bson:"city" json:"city"`
	ProvinceState  string `bson:"province_state" json:"province_state"`
	ZipCode        string `bson:"zip_code" json:"zip_code"`
	Country        string `bson:"country" json:"country"`
}

type ShippingRate struct {
	ID              string    `json:"id" bson:"id"`
	Name            string    `json:"name" bson:"name"`
	Rate            string    `json:"rate" bson:"rate"`
	Currency        string    `json:"currency" bson:"currency"`
	MinDeliveryDays int       `json:"minDeliveryDays" bson:"min_delivery_days"`
	MaxDeliveryDays int       `json:"maxDeliveryDays" bson:"max_delivery_days"`
	MinDeliveryDate string    `json:"minDeliveryDate" bson:"min_delivery_date"`
	MaxDeliveryDate string    `json:"maxDeliveryDate" bson:"max_delivery_date"`
	Timestamp       time.Time `json:"timestamp" bson:"timestamp"`
}
