Funcs and where
keys: [#] = manageable standalone func; F# = larger func by user act;

Create checkout func (only POST /checkout, in GET /checkout):
- Gets current cart + user + products [1]
- Creates a draftorder CDAF [2]
- returns draftorder id

Render checkout func (only GET /checkout/:id, in GET /checkout): 
- Gets draftorder (or creates one)
- Renders it on page


Delayed get funcs: 
- If saved stripe ID, fetch all payment methods [3]
- Get addresses, use 1st [4] -> obtain all ship rates + choose [F1]


Non-submit changes on page:
F1 - Modify shipping address
F2 - Choose ship rate
F3 - Choose existing payment method


F1 -- Modify address/contact:
- [If NEW, parse; If provided ID, retrieve]
- Checks that it's real, validates country codes
- If in CA, gets and updates tax -> total
- Checks if partial string of address in ShipRate map and within last hour
  - If so, updates current to that and updates actual rate to first one
  - Else, fetches it -> saves in map incl timestamp, updates current and actual
 // 
- Check user's status and order total to see if qualified for "free" shipping
  - If so, modify pricing for cheapest to be $0, all others min $0.99 else rate minus cheapest
- If a change in shipping amount, update shipping -> total
- If any change in total, recalibrate payment intent
- Send out update to payment display section

F2 -- Choose ship rate:
 - Grabs ship rate corresponding from Current
 - Modifies actual
 - If a change in shipping amount, update shipping -> total
 - If any change in total, recalibrate payment intent
 - Send out update to payment display section

F3 -- Choose an existing payment method
 - Just update the method id on draft order... that's kinda it
