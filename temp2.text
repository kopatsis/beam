CUSTOMER:
- PK (int)
- Firebase UID (str)
- Stripe ID (str)
- Default Name (str)
- Email (str)
- Email Subbed (bool)
- FK: Default Shipping Contact ID
- FK: Default Billing Contact ID
- Tags ([]str)
- *Phone Number (str)
- Status (str/ENUM)
- Order Count (int)
- Autodiscount PCT off (float)
- Notes (str)

GUEST CUSTOMER:
- UUID (str)

CONTACT:
- PK (int)
- First Name (str)
- *Last Name (str)
- *Phone Number (str)
- Street Address 1 (str)
- *Street Address 2 (str)
- City (str)
- Province/State (str)
- Zip Code (str)
- Country (str)

PRODUCTS - w/in COLLECTION - redis (and searchinfo): "::PWC::" :
[] of ALL -> 
 - Product ID
 - Product Handle
 - Product Title (str)
 - Product Date Added (date)
 - Product Sales (int)
 - Product Price (float)
 - Product Inventory (int)
 - Product Avg Rate (float)
 - Tags ([]string)
 - *Variant1 Key (str)
 - *Variant2 Key (str)
 - *Variant3 Key (str)

CART:
- PK (int)
- FK: Customer ID 
- Date Started (date)
- Item Count (int)
- Status (str/ENUM)
- Ever Abandoned at checkout (bool)

CART Lines:
- PK (int)
- FK: Customer ID 
- FK: Cart ID
- FK: Product ID
- FK: Variant ID
- Image URL
- Product Title (str)
- Variant1 Key (str)
- Variant1 Value (str)
- *Variant2 Key (str)
- *Variant2 Value (str)
- *Variant3 Key (str)
- *Variant3 Value (str)
- Quantity (int)
- Price (float)

LIST:
- PK (int)
- FK: Customer ID 
- Title (str)
- Date Started (date)
- Item Count (int)

LIST Lines:
- PK (int)
- FK: Line ID
- FK: Product ID
- FK: Variant ID
- Image URL
- Product Title (str)
- Variant1 Key (str)
- Variant1 Value (str)
- *Variant2 Key (str)
- *Variant2 Value (str)
- *Variant3 Key (str)
- *Variant3 Value (str)
- Quantity (int)
- Price (float)
- Date Added (int)

DISCOUNT:
- PK (int)
- Discount Code (str)
- Is PCT Off (bool)
- *PCT Off (float)
- Is $ Off (bool)
- *$ Off (int)
- Has min subtotal (bool)
- *Min subtotal (int)
- Stacks (bool)
- Applies to all (bool)

DISCOUNT Users:
- FKPK: Discount ID
- FKPK: Customer ID

EVENT Log:
- PK (arbitrary)
- FK Customer ID
- Timestamp (date)
- Event Classification (str/ENUM?)
- Event Description (str)
- *FK: Order ID
- *FK: Product ID
- *FK: List ID
- *FK: Cart ID
- *FK: Collection ID
- *FK: Discount ID
- *FK: Review ID ...
- Special Note (str)
- Tags ([]str)

Review:
- PK (int)
- FK: Customer ID
- FK: Product ID
- FK: Variant ID
- Variant1 Key (str)
- Variant1 Value (str)
- *Variant2 Key (str)
- *Variant2 Value (str)
- *Variant3 Key (str)
- *Variant3 Value (str)
- Stars (int)
- *Title (str)
- *Description (str w/ \n)
- Date added (date)
- Date last edited (date)

PRODUCT - mysql:
- PK (int)
- Printful id (str/int)
- Handle (str)
- Title (str)
- Description (html)
- Bullets ([]str)
- Image URL (str)
- Alt Image URLs ([]str)
- Status (str/ENUM)
- Tags ([]str)
- Rating (float)
- *Redirect (str)
- Variant1 Key (str)
- *Variant2 Key (str)
- *Variant3 Key (str)
- SEO Title (str)
- SEO Description (str)

COMPARABLE - mysql:
- PKFK: Product ID 1
- PKFK: Product ID 2

VARIANT - mysql:
- PK (int)
- FK: Product ID
- Printful ID (str)
- SKU (str)
- Variant1 Key (str)
- *Variant2 Key (str)
- *Variant3 Key (str)
- Price (float)
- Quantity (int)
- Variant Image URL (str)
- Variant Barcode/UPC (str)

PRODUCT - redis: "PRO::"+ Handle: 
- PK (int)
- Printful id (str/int)
- Title (str)
- Description (html)
- Bullets ([]str)
- Image URL (str)
- Alt Image URLs ([]str)
- Status (str/ENUM)
- Tags ([]str)
- Rating (float)
- *Variant1 Key (str)
- *Variant2 Key (str)
- *Variant3 Key (str)
- Comparables -> []{
 - Product Handle (str)
 - Product Title (str)
 - Product Image URL (str)
 - Product Price (float)
 }
- Variants -> [] {
 - PK (int)
 - Printful ID (str)
 - SKU (str)
 - Variant1 Key (str)
 - *Variant2 Key (str)
 - *Variant3 Key (str)
 - Price (float)
 - Quantity (int)
 - Variant Image URL (str)
 - Variant Barcode/UPC (str)
}
OR: *Redirect (str) [not active]

ORDER - mongodb:
- ID (str)
- Printful ID (str)
- Customer ID (int)
- Draft Order ID (str)
- Status (str)
- Email (str)
- Date Created (date)
- Date Cancelled (date)
- Date Processed Printful (date)
- Date Shipped (date)
- Date Delivered (date)
- Date Return Initiated (date)
- Date Return Completed (date)
- Stripe Payment Intent ID (str)
- Subtotal (int)
- Shipping (int)
- Order Level Discount (int)
- Tax (int)
- Tip (int)
- Total (int)
- *Non-Stacking Discount Code (str)
- *Stacking Discount Codes ([]str)
- Billing CONTACT {} (Same as contact datatype, NOT ID)
- Shipping CONTACT {} (Same as contact datatype, NOT ID)
- Tags ([]str)
- Delivery Note (str)
- Shipping Identification (str)
- Guest (bool)
- Guest ID (UUID, str)
- External (bool)
- External Platform (str)
- External ID (str)
- Shipping Carrier (str)
- Shipping Service (str)
- Shipping Tracking Number (str)
- Shipping Tracking URL (str)

ORDER Lines - mongodb:
 - Product ID (str)
 - Variant ID (str)
 - Quantity (int)
 - Undiscounted Price (int)
 - Line-level Discount (int)
 - End Price (int)
 - Line Total (int)

DRAFT ORDER - mongodb:
- ID (str)
- Customer ID (str)
- Status (str/ENUM)
- Email (str)
- Date Created (date)
- *Date Abandoned (date)
- Stripe Payment Intent ID (str)
- Subtotal (float)
- Shipping (float)
- Order Level Discount (float)
- Tax (float)
- Tip (float)
- Total (float)
- *Non-Stacking Discount Code (str)
- *Stacking Discount Codes ([]str)
- Billing CONTACT {} (Same as contact datatype, NOT ID)
- Shipping CONTACT {} (Same as contact datatype, NOT ID)
- Guest (bool)
- Guest ID (UUID) [Only if no customer id as guest]

DRAFT ORDER Lines - mongodb:
 - Product ID (str)
 - Variant ID (str)
 - Quantity (int)
 - Undiscounted Price (float)
 - Line-level Discount (float)
 - End Price (float)
 - Line Total (float)

NOTIFICATION - mysql -> cold:
- PK (arbitrary)
- FK Customer ID
- Timestamp created (date)
- Timestamp completed (date)
- Timestamp removed (date)
- Event Classification (str/ENUM?)
- Event Description (str)
- *FK: Order ID
- *FK: Product ID
- *FK: List ID
- *FK: Cart ID
- *FK: Collection ID
- *FK: Discount ID
- *FK: Review ID ...
- Special Note (str)
- Tags ([]str)
- Status (str/ENUM, created, completed, removed)
- Specific Email (str)
- Specific Phone (str)
- Email (bool)
- Phone (bool)

ALLFILTERS - redis: "ALLFILTERS"
 - [] of {Key: []Values}


FilterSave - redis:
* in extremely rare situation that filter query is > 2048 chars, is structured as https://mainurl.com/collections/this-collection-handle?fid=[uid]
fid : full string filter



https://amazon-sales-channel-app-backend.cifapps.com/plan/plan/processQuotePayment?payment_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJxdW90ZV9pZCI6IjIxNjQ3NCIsImV4cCI6MTc0MDg3Mjg2NCwiYXVkIjoiIiwicGxhbl90eXBlIjoiY3VzdG9tIiwidXNlcl9pZCI6IjY1YjE5NzEyNDA5ZmIxMmZlODBhZDkxNSIsImlzcyI6Imh0dHBzOi8vYXBwcy5jZWRjb21tZXJjZS5jb20iLCJ0b2tlbl9pZCI6IjY3YmZhODIwZDNkNWI1OWFmMzBlNTExMiJ9.nubF5BQelwt5DjVyMeY3rVgmnTIUQmu3wuten9nyC8PWXhIq4Uqzv2Dn4AgfvBK6qVbMDzllJNUd4IEWtfiosx0OyeE04TLmZ9MYGG6Y1zXuzzNBwh0ID4mV4YKp5pQ8CWVKazDZHEragYW92gdvRG_Od9U-t4g8hqWprBfPiH5l9KG0ESr9q0WfZu91jqCceHNoMt2gqzdSiOVpion8lTRgIcP7UnCTXaqJHBJ-yK-u1yvxyNnnRD0-xMOJ3WPV-LTkdWXw_XtbEO4NjH3ZZEdRfg2fp-0cANEZn2OqE5ykkrYKJh68rwhhkJjz6-hhLvjedUSh-XwFI-1ppLIjqQ